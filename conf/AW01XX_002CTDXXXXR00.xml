<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE instrument SYSTEM "instrument.dtd">
<instrument>
    <!-- The instrument identifier -->
    <identifier>AW01XX_002CTDXXXXR00</identifier>
    <!-- The connection type: socket, file, or serial -->
    <connectionType>socket</connectionType>
    <!-- 
      Configure connection parameters based on connection type. If connection
      type is socket, add hostName and hostPort below. If file, add filePath
      below. If serial, add serialPortParams and sub elements below.
    -->
    <connectionParams> 
        <hostName>68.25.35.242</hostName>
        <hostPort>5111</hostPort>
    </connectionParams>
    <!-- The name of the instrument source as it appears in the DataTurbine -->
    <rbnbName>AW01XX_002CTDXXXXR00</rbnbName>
    <!-- The IP or host name of the DataTurbine server -->
    <rbnbServer>realtime.pacioos.hawaii.edu</rbnbServer>
    <!-- The port number of the DataTurbine server -->
    <rbnbPort>3333</rbnbPort>
    <!-- The number of in-memory bytes to request for this instrument source -->
    <archiveMemory>50000</archiveMemory>
    <!-- The number of on-disk bytes to request for this instrument source -->
    <archiveSize>31536000</archiveSize>
    <!-- The list of data channels to be created in the DataTurbine for this instrument source -->
    <channels>
        <!-- The default channel details. This will push ASCII data into the DataTurbine -->
        <channel default="true">
            <!-- The name of the channel -->
            <name>DecimalASCIISampleData</name>
            <!-- The channel's incoming data type -->
            <dataType>String</dataType>
            <!-- data archive example:
            # 26.0505,  5.00960,    0.406, 0.1835, 0.1533,  32.0562, 22 Mar 2013 16:01:11
            # 25.7813,  5.08190,    0.421, 0.1758, 0.1531,  32.7674, 22 Mar 2013 16:05:11
            # 25.5295,  5.13902,    0.409, 0.1394, 0.1649,  33.3646, 22 Mar 2013 16:09:11
            # 26.1928,  4.98592,    0.356, 0.2123, 0.1539,  31.7879, 22 Mar 2013 16:13:11
            # 25.7245,  5.08019,    0.349, 0.2344, 0.1519,  32.7958, 22 Mar 2013 16:17:11
            # 25.8939,  5.06251,    0.367, 0.1757, 0.1515,  32.5471, 22 Mar 2013 16:21:11
            # 25.5735,  5.14871,    0.376, 0.1968, 0.1866,  33.4031, 22 Mar 2013 16:25:11
            # 25.8623,  5.08455,    0.295, 0.2356, 0.1552,  32.7287, 22 Mar 2013 16:29:11
            # 25.9927,  5.07034,    0.502, 0.2581, 0.1574,  32.5333, 22 Mar 2013 16:33:11
            # 25.6895,  5.12890,    0.444, 0.2250, 0.1612,  33.1743, 22 Mar 2013 16:37:11
            -->
            <!-- example DT sample:
            curl -s -o - http://realtime.pacioos.hawaii.edu:8080/RBNB/AW01XX_002CTDXXXXR00/DecimalASCIISampleData | od -ax
            0000000   #  sp   2   6   .   0   1   2   5   ,  sp  sp   5   .   1   1
                    2023 3632 302e 3231 2c35 2020 2e35 3131
            0000020   8   3   5   ,  sp  sp  sp   -   0   .   1   1   7   ,  sp   0
                    3338 2c35 2020 2d20 2e30 3131 2c37 3020
            0000040   .   1   5   2   8   ,  sp   0   .   1   4   5   1   ,  sp  sp
                    312e 3235 2c38 3020 312e 3534 2c31 2020
            0000060   3   2   .   8   6   5   1   ,  sp   2   2  sp   M   a   r  sp
                    3233 382e 3536 2c31 3220 2032 614d 2072
            0000100   2   0   1   3  sp   1   9   :   1   3   :   1   1  cr  nl nul
                    3032 3331 3120 3a39 3331 313a 0d31 000a
            0000117
            -->
            <!-- 
              The regular expression used to match a data sample.
              Best to keep the data pattern on one line below 
            -->
            <dataPattern># \S*, *\S*, *\S*, *\S*, *\S*, *\S*, *\d{2} \S{3} \d{4} \d{2}:\d{2}:\d{2}\s*</dataPattern>
            <!-- 
              The character that delimits variables within the sample
              Use Hex notation for non-printing, whitespace characters (like space)
            -->
            <fieldDelimiter>,</fieldDelimiter>
            <!-- 
              The character(s) that delimit records (samples) in a stream or file
              Use Hex notation for non-printing characters, separate characters with a pipe
            -->
            <recordDelimiters>0x0D|0x0A</recordDelimiters>
            <!-- 
              The list of date formats for each sample date component in a separate variable
              One or more date formats are required, reflecting the date/time variables in the data
              Note: dateFormat and dateField are used together to locate, then parse the sample date
              -->
            <dateFormats>
              <dateFormat>dd MMM yyyy HH:mm:ss</dateFormat> 
            </dateFormats>
            <!-- 
              The list of date fields for each sample date component in a separate variable
              One or more date fields are required, corresponding to the date/time variable positions in the data 
            -->        
            <dateFields>
              <dateField>7</dateField>
            </dateFields>
            <!-- The time zone identifier that the data were collected in -->
            <timeZone>Pacific/Honolulu</timeZone>
            <!-- The list of data archivers used to write data to disk -->
            <archivers>
                <!-- Write the raw data to /data/raw -->
                <archiver>
                    <archiveType>raw</archiveType>
                    <archiveInterval>hourly</archiveInterval>
                    <archiveBaseDirectory>/data/raw/alawai</archiveBaseDirectory>
                </archiver>
                <!-- Write the PacIOOS 2020 formatted data to /data/processed -->
                <!--
                <archiver>
                    <archiveType>pacioos-2020-format</archiveType>
                    <archiveInterval>daily</archiveInterval>
                    <archiveBaseDirectory>/data/processed/pacioos</archiveBaseDirectory>
                </archiver>
                -->
            </archivers>
        </channel>
    </channels>
</instrument>