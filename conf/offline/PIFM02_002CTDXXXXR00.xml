<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE instrument SYSTEM "../instrument.dtd">
<instrument>
    <!-- the instrument short name -->
    <shortName>NS06</shortName>
    <!-- The instrument identifier -->
    <identifier>PIFM02_002CTDXXXXR00</identifier>
    <!-- The connection type: socket, file, or serial -->
    <connectionType>file</connectionType>
    <!-- 
      Configure connection parameters based on connection type. If connection
      type is socket, add hostName and hostPort below. If file, add filePath
      below. If serial, add serialPortParams and sub elements below.
    -->
    <connectionParams>
        <filePath>/home/kilonalu/PIFM02_002CTDXXXXR00_latest_data.txt</filePath>
    </connectionParams>
    <!-- The name of the instrument source as it appears in the DataTurbine -->
    <rbnbName>PIFM02_002CTDXXXXR00</rbnbName>
    <!-- The IP or host name of the DataTurbine server -->
    <rbnbServer>realtime.pacioos.hawaii.edu</rbnbServer>
    <!-- The port number of the DataTurbine server -->
    <rbnbPort>3333</rbnbPort>
    <!-- The number of in-memory bytes to request for this instrument source -->
    <archiveMemory>50000</archiveMemory>
    <!-- The number of on-disk bytes to request for this instrument source -->
    <archiveSize>31536000</archiveSize>
    <!-- The list of data channels to be created in the DataTurbine for this instrument source -->
    <channels>
        <!-- The default channel details. This will push ASCII data into the DataTurbine -->
        <channel default="true">
            <!-- The name of the channel -->
            <name>DecimalASCIISampleData</name>
            <!-- The channel's incoming data type -->
            <dataType>String</dataType>
            <!-- data archive example:
            # 31.6985,  5.639683,  1.048,  0.4280,  0.6580,  32.5317,  15 Jul 2020 00:01:10
            # 31.7059,  5.639971,  1.035,  0.3990,  0.6272,  32.5287,  15 Jul 2020 00:05:10
            # 31.7012,  5.639365,  1.021,  0.4257,  0.6407,  32.5279,  15 Jul 2020 00:09:10
            # 31.7077,  5.647037,  1.009,  0.4096,  0.6175,  32.5734,  15 Jul 2020 00:13:10
            # 31.7034,  5.654630,  0.997,  0.4204,  0.6172,  32.6254,  15 Jul 2020 00:17:10
            # 31.7194,  5.650723,  0.990,  0.3907,  0.6188,  32.5896,  15 Jul 2020 00:21:10
            # 31.7003,  5.641821,  0.989,  0.3855,  0.6126,  32.5444,  15 Jul 2020 00:25:10
            # 31.6910,  5.632130,  0.984,  0.3853,  0.5954,  32.4876,  15 Jul 2020 00:29:10
            # 31.7788,  5.638772,  0.979,  0.2970,  0.4499,  32.4733,  15 Jul 2020 00:33:10
            # 31.7953,  5.642941,  0.979,  0.3404,  0.5190,  32.4895,  15 Jul 2020 00:37:10
            -->
            <!-- 
              The regular expression used to match a data sample.
              Best to keep the data pattern on one line below 
            -->
            <dataPattern># *\S*, *\S*, *\S*, *\S*, *\S*, *\S*, *\d{2} \S{3} \d{4} *\d{2}:\d{2}:\d{2}\s*</dataPattern>
            <!--
                dataPrefix: A string of characters that prefix the data in a sample (e.g. '#')
            -->
            <dataPrefix>#</dataPrefix>
            <!--
                columnTypes: A list of column types for each variable in the sample. Use STRING
                for all column types except:
                - date-only columns: use LOCAL_DATE
                - time-only columns: use LOCAL_TIME
                - date-time columns: use LOCAL_DATE_TIME
            -->
            <columnTypes>
                <columnType>STRING</columnType>
                <columnType>STRING</columnType>
                <columnType>STRING</columnType>
                <columnType>STRING</columnType>
                <columnType>STRING</columnType>
                <columnType>STRING</columnType>
                <columnType>LOCAL_DATE_TIME</columnType>
            </columnTypes>
            <!--
              The character that delimits variables within the sample
              Use Hex notation for non-printing, whitespace characters (like space)
            -->
            <fieldDelimiter>,</fieldDelimiter>
            <!-- 
              The character(s) that delimit records (samples) in a stream or file
              Use Hex notation for non-printing characters, separate characters with a pipe
            -->
            <recordDelimiters>0x0D|0x0A</recordDelimiters>
            <!-- 
              The list of date formats for each sample date component in a separate variable
              One or more date formats are required, reflecting the date/time variables in the data
              Note: dateFormat and dateField are used together to locate, then parse the sample date
              -->
            <dateFormats>
                <dateFormat>dd MMM yyyy HH:mm:ss</dateFormat> 
            </dateFormats>
            <!-- 
              The list of date fields for each sample date component in a separate variable
              One or more date fields are required, corresponding to the date/time variable positions in the data 
            -->        
            <dateFields>
                <dateField>7</dateField>
            </dateFields>
            <!--
              timeZone: The time zone identifier that the data were collected in (e.g. Pacific/Honolulu).
              The parsers are strict about zone identifiers, and will fall back to UTC when the
              now-deprecated zone names are used (in the format of HDT, HST, SST, etc.). They are
              considered ambiguous due to conflicting global use.  Only use identifiers that follow
              the <region>/<locality> pattern (like Pacific/Samoa). While an exact offset like
              GMT+13:00 will also work, it may change over time due to daylight savings,
              so the long identifier is best.
            -->
            <timeZone>Pacific/Pohnpei</timeZone>
            <!-- The list of data archivers used to write data to disk -->
            <archivers>
                <!-- Write the raw data to /data/raw -->
                <archiver>
                    <archiveType>raw</archiveType>
                    <archiveInterval>hourly</archiveInterval>
                    <archiveBaseDirectory>/data/raw/pacioos</archiveBaseDirectory>
                </archiver>
                <!-- Write the PacIOOS 2020 formatted data to /data/processed -->
                <archiver>
                    <archiveType>pacioos-2020-format</archiveType>
                    <archiveInterval>daily</archiveInterval>
                    <archiveBaseDirectory>/data/processed/pacioos</archiveBaseDirectory>
                </archiver>
            </archivers>
        </channel>
    </channels>
</instrument>
