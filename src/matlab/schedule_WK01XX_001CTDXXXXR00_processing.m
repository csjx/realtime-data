% schedule_WK01XX_001CTDXXXXR00_processing 
%   This is a short runtime script that kicks off processing and
%   display of CTD data.  It depends on configuration information
%   found in the Configure class, and creates an instance of the
%   CTDProcessor class, and then runs the process() method via a
%   timer object so that the processing regularly recurs.

%  Copyright: 2007 Regents of the University of Hawaii and the
%             School of Ocean and Earth Science and Technology 
%    Authors: Christopher Jones             
%  
% $HeadURL$
% $LastChangedDate$
% $LastChangedBy$
% $LastChangedRevision$
% 
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or
% (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
% 

  % Create a new Configure instance and set the configuration details
  import edu.hawaii.soest.bbl.configuration.Configure;
  configuration = Configure;
  
  % set the processing-specific details for the instrument
  set( configuration, ...
  'baseDirectory'       , '/home/cjones/development/bbl/trunk/'                      , ...
  'outputDirectory'     , '/var/www/html/OE/KiloNalu/Data/CTD/WK01XX_001CTDXXXXR00/' , ...
  'convertPath'         , '/usr/local/bin/convert'                                   , ...
  'copyPath'            , '/bin/cp'                                                  , ...
  'rbnbPath'            , '/usr/local/RBNB/V3.1B4a/'                                 , ...
  'rbnbLibraryPath'     , '/usr/local/RBNB/V3.1B4a/bin/rbnb.jar'                     , ...
  'rbnbMatlabPath'      , '/usr/local/RBNB/V3.1B4a/Matlab/'                          , ...
  'rbnbServer'          , 'bbl.ancl.hawaii.edu'                                      , ...
  'rbnbSinkName'        , 'MatlabWK01XX_001CTDXXXXR00ProcessingSink'                 , ...
  'rbnbSource'          , 'WK01XX_001CTDXXXXR00'                                     , ...
  'rbnbChannel'         , 'DecimalASCIISampleData'                                   , ...
  'dataFormatString'    , '# %f %f %f %f %s %s'                                      , ...
  'dataVariableNames'   , {'temperature'                                             , ...
                           'conductivity'                                            , ...
                           'pressure'                                                , ...
                           'salinity'                                                , ...
                           'date'                                                    , ...
                           'time'                                                    , ...
                          }                                                          , ...
  'dataVariableUnits'   , {'\circC'                                                  , ...
                           'S/m'                                                     , ...
                           'decibars'                                                , ...
                           'PSU'                                                     , ...
                           'dd mmm yyyy'                                             , ...
                           'HH:MM:SS'                                                , ...
                          }                                                          , ...
  'fieldDelimiter'      , ','                                                        , ...
  'numberOfHeaderLines' , '0'                                                        , ...
  'duration'            , 31536000                                                   , ...
  'instrumentSampleRate', 15                                                         , ...
  'reference'           , 'newest'                                                   , ...
  'startTime'           , 0                                                          , ...
  'createFigures'       , true                                                       , ...
  'exportFigures'       , true                                                       , ...
  'timerInterval'       , 20                                                           ...
  );
  
  % Set up directory paths, and create a new CTDProcessor instance
  import edu.hawaii.soest.bbl.processing.CTDProcessor;
  javaaddpath(configuration.rbnbLibraryPath);
  addpath(configuration.rbnbMatlabPath);
  ctdProcessor = CTDProcessor(configuration);
  
  % schedule the processing
  
  % set the timer start time based on the timer interval.
  set(ctdProcessor, 'timerStartTime', ctdProcessor.configuration.timerInterval);
  
  % set the timer object instance
  set(ctdProcessor, 'timerObject',                     ...
    timer('TimerFcn',                                  ...
          'ctdProcessor.process',                      ...
          'period',                                    ...
          ctdProcessor.configuration.timerInterval*60, ...
          'executionmode',                             ...
          'fixeddelay'));
  startat(ctdProcessor.timerObject, ctdProcessor.timerStartTime);
